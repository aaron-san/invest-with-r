<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on Invest with R</title>
    <link>/blog/</link>
    <description>Recent content in Blog on Invest with R</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>/blog/2015-07-23-r-rmarkdown/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/blog/2015-07-23-r-rmarkdown/</guid>
      <description>—title: “Hello R Markdown”author: “Frida Gomam”date: 2015-07-23T21:13:14-05:00categories: [“R”]tags: [“R Markdown”, “plot”, “regression”]—R MarkdownThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.
You can embed an R code chunk like this:
summary(cars)## speed dist ## Min.</description>
    </item>
    
    <item>
      <title></title>
      <link>/blog/creating-a-new-theme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/blog/creating-a-new-theme/</guid>
      <description>&amp;mdash; author: Theme author categories: - Hugo date: &amp;ldquo;2014-09-28&amp;rdquo; description: Learn how to create a theme on Hugo featured: pic03.jpg featuredalt: Pic 3 featuredpath: date linktitle: &amp;quot;&amp;rdquo; tags: - tutorial title: Creating a New Theme type: post draft: true &amp;mdash; Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content.</description>
    </item>
    
    <item>
      <title></title>
      <link>/blog/goisforlovers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/blog/goisforlovers/</guid>
      <description>&amp;mdash; author: Unknown Author categories: - Go date: &amp;ldquo;2014-04-02&amp;rdquo; description: &amp;quot;&amp;rdquo; featured: pic02.jpg featuredalt: Pic 2 featuredpath: date linktitle: &amp;quot;&amp;rdquo; title: (Hu)go Template Primer type: post draft: true &amp;mdash; Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website.</description>
    </item>
    
    <item>
      <title></title>
      <link>/blog/hugoisforlovers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/blog/hugoisforlovers/</guid>
      <description>&amp;mdash; author: Hugo author categories: - Hugo date: &amp;ldquo;2014-04-02&amp;rdquo; description: &amp;quot;&amp;rdquo; featured: pic01.jpg featuredalt: Pic 1 featuredpath: date linktitle: &amp;quot;&amp;rdquo; title: Getting Started with Hugo type: post &amp;mdash; Step 1. Install Hugo Go to hugo releases and download the appropriate version for your os and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at installing hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.</description>
    </item>
    
    <item>
      <title></title>
      <link>/blog/migrate-from-jekyll/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/blog/migrate-from-jekyll/</guid>
      <description>&amp;mdash; author: Migrating author categories: - Hugo - Jekyll date: &amp;ldquo;2014-03-10&amp;rdquo; description: &amp;quot;&amp;rdquo; featured: &amp;quot;&amp;rdquo; featuredalt: &amp;quot;&amp;rdquo; featuredpath: &amp;quot;&amp;rdquo; linktitle: &amp;quot;&amp;rdquo; title: Migrate to Hugo from Jekyll type: post draft: true &amp;mdash; Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like</description>
    </item>
    
  </channel>
</rss>